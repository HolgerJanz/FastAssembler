; Test Suite for FA SpartaDOS X
;   without extended memory
; Use: -TEST_SDX
; Requires:
;  FA.COM in path,<TESTS,<EXAMPLES,<SOURCES,<SDXLIB
; Assembles ASM files,
; compares OBJ/SYM files with COM/TXT files,
; checks for expected errors
ECHO ON
LOAD COMMAND.COM
LOAD <BIN>FA.COM
;===================================
; BEGIN FA Test Suite
;===================================
SETERRNO 0

;===================================
; Test Parameter, Summary, and List

FA
IF ERROR
 EXIT
FI

FA /LS ERROR1 /LS ERROR2.XXX Z
IF NOT ERROR 156
 EXIT
FI
SETERRNO 0

FA TESTSYMB.ASM /L
IF ERROR
 EXIT
FI

FA TESTSYMB.ASM /S
IF ERROR
 EXIT
FI

FA /S TESTSYMB.ASM /L
IF ERROR
 EXIT
FI

;===================================
; Test Statements

FA /E TEST6502.ASM
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TEST6502.COM TEST6502.OBJ
IF ERROR
 EXIT
FI

FA /E TESTBLCK.ASM
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTBLCK.COM TESTBLCK.OBJ
IF ERROR
 EXIT
FI

FA /E TESTCOMP.ASM
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTCOMP.COM TESTCOMP.OBJ
IF ERROR
 EXIT
FI

FA /E TESTEND.ASM
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTEND.COM TESTEND.OBJ
IF ERROR
 EXIT
FI

FA /E TESTEXPR.ASM
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTEXPR.COM TESTEXPR.OBJ
IF ERROR
 EXIT
FI

FA /E TESTINC.ASM
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTINC.COM TESTINC.OBJ
IF ERROR
 EXIT
FI

FA /E TESTINC2.ASM
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTINC2.COM TESTINC2.OBJ
IF ERROR
 EXIT
FI

FA /E TESTLABE.ASM
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTLABE.COM TESTLABE.OBJ
IF ERROR
 EXIT
FI

FA /E TESTMAXP.ASM
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTMAXP.COM TESTMAXP.OBJ
IF ERROR
 EXIT
FI

FA /E TESTMCLR.ASM
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTMCLR.COM TESTMCLR.OBJ
IF ERROR
 EXIT
FI

FA /E TESTPSDO.ASM
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTPSDO.COM TESTPSDO.OBJ
IF ERROR
 EXIT
FI

FA /E TESTSYMB.ASM
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTSYMB.COM TESTSYMB.OBJ
IF ERROR
 EXIT
FI

FA /E TESTINS.ASM
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTINS.COM TESTINS.OBJ
IF ERROR
 EXIT
FI

;===================================
; Test Compile Errors

; Undeclared label
FA ERRORURS /E
IF NOT ERROR 224
 EXIT
FI
SETERRNO 0

; Label recursion
FA errorrec /E
IF NOT ERROR 224
 EXIT
FI
SETERRNO 0

; Declared twice
FA error225 /E
IF NOT ERROR 225
 EXIT
FI
SETERRNO 0

; Unexpected eol
FA error226 /E
IF NOT ERROR 226
 EXIT
FI
SETERRNO 0

; Too many passes
FA /E error228
IF NOT ERROR 228
 EXIT
FI
SETERRNO 0

; Too many passes
FA /E error227
IF NOT ERROR 227
 EXIT
FI
SETERRNO 0

; String error
FA /E error229
IF NOT ERROR 229
 EXIT
FI
SETERRNO 0

; Branch too far
FA /E error231
IF NOT ERROR 231
 EXIT
FI
SETERRNO 0

; Improper type (2)
FA ERRORN2 /E
IF NOT ERROR 232
 EXIT
FI
SETERRNO 0

; Branch too far ERROR233.ASM
FA error233 /E
IF NOT ERROR 233
 EXIT
FI
SETERRNO 0

; Too long or invalid symbol
FA error238 /E
IF NOT ERROR 238
 EXIT
FI
SETERRNO 0

; Program counter overflow
FA error243 /E
IF NOT ERROR 243
 EXIT
FI
SETERRNO 0

; Check messages and code position
FA testemsg >>testemsg.trc
<BIN>TESTCOMP TESTEMSX.TXT TESTEMSG.TRC
IF ERROR
 EXIT
FI
SETERRNO 0

DEL *.OBJ
DEL *.TRC

;===================================
; Test Examples

CD <EXAMPLES>

FA /E COMP_SDX
IF ERROR
 EXIT
FI
<BIN>TESTCOMP COMP_SDX.COM COMP_SDX.OBJ
IF ERROR
 EXIT
FI

FA /E CALLEE
IF ERROR
 EXIT
FI
<BIN>TESTCOMP CALLEE.COM CALLEE.OBJ
IF ERROR
 EXIT
FI

FA /E COMP_BWD
IF ERROR
 EXIT
FI
<BIN>TESTCOMP COMP_BWD.COM COMP_BWD.OBJ
IF ERROR
 EXIT
FI

FA /E COMP_SDX
IF ERROR
 EXIT
FI
<BIN>TESTCOMP COMP_SDX.COM COMP_SDX.OBJ
IF ERROR
 EXIT
FI

FA /E GTIA
IF ERROR
 EXIT
FI
<BIN>TESTCOMP GTIA.COM GTIA.OBJ
IF ERROR
 EXIT
FI

FA /E HELLO
IF ERROR
 EXIT
FI
<BIN>TESTCOMP HELLO.COM HELLO.OBJ
IF ERROR
 EXIT
FI

FA /E HI_BWD
IF ERROR
 EXIT
FI
<BIN>TESTCOMP HI_BWD.COM HI_BWD.OBJ
IF ERROR
 EXIT
FI

FA /E HI_SDX
IF ERROR
 EXIT
FI
<BIN>TESTCOMP HI_SDX.COM HI_SDX.OBJ
IF ERROR
 EXIT
FI

FA /E HSCROL
IF ERROR
 EXIT
FI
<BIN>TESTCOMP HSCROL.COM HSCROL.OBJ
IF ERROR
 EXIT
FI

FA /E MY_COMP
IF ERROR
 EXIT
FI
<BIN>TESTCOMP MY_COMP.COM MY_COMP.OBJ
IF ERROR
 EXIT
FI

FA /E POKEY
IF ERROR
 EXIT
FI
<BIN>TESTCOMP POKEY.COM POKEY.OBJ
IF ERROR
 EXIT
FI

FA /E RAINBOW /Y
IF ERROR
 EXIT
FI
<BIN>TESTCOMP RAINBOW.COM RAINBOW.OBJ
IF ERROR
 EXIT
FI
<BIN>TESTCOMP <TESTS>RAINBOWS.TXT RAINBOW.SYM
IF ERROR
 EXIT
FI

FA /E TSR_CALL
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TSR_CALL.COM TSR_CALL.OBJ
IF ERROR
 EXIT
FI

FA /E TSR
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TSR.COM TSR.OBJ
IF ERROR
 EXIT
FI

DEL *.OBJ
DEL *.SYM

;===================================
; Test SDX lib

CD <SDXLIB>

FA /E TESTCOPY
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTCOPY.COM TESTCOPY.OBJ
IF ERROR
 EXIT
FI

FA /E TESTFILE
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTFILE.COM TESTFILE.OBJ
IF ERROR
 EXIT
FI

FA /E TESTGETN
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTGETN.COM TESTGETN.OBJ
IF ERROR
 EXIT
FI

FA /E TESTMUDI
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTMUDI.COM TESTMUDI.OBJ
IF ERROR
 EXIT
FI

FA /E TESTPRNF
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTPRNF.COM TESTPRNF.OBJ
IF ERROR
 EXIT
FI

FA /E TESTSLSH
IF ERROR
 EXIT
FI
<BIN>TESTCOMP TESTSLSH.COM TESTSLSH.OBJ
IF ERROR
 EXIT
FI

;===================================
; Test FastAssembler itself

CD <SOURCES>

FA /E FA_SDX
IF ERROR
 EXIT
FI
<BIN>TESTCOMP <BIN>FA.COM FA_SDX.OBJ
IF ERROR
 EXIT
FI

FA /E FA_BWD
IF ERROR
 EXIT
FI
<BIN>TESTCOMP <DOS>FA.COM FA_BWD.OBJ
IF ERROR
 EXIT
FI

;===================================
; END FA Test Suite
;===================================
CD <TESTS>
LOAD
EXIT
